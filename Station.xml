<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Declare global constants and variables
const int NUM_STATIONS= 3 ; //The number of station in the system
const int MAX_PIECES = 1; //The maximum number of pieces a station can process
const int PROCESSING_TIME[NUM_STATIONS]={10,20,30}; // The processing time (in time units) for each station

int free[NUM_STATION]; //Indicates if the station is free (1) or not (0)
chan piece,full,free;</declaration>
	<template>
		<name x="5" y="5">Template</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="-365" y="-34">
			<name x="-391" y="-68">START</name>
		</location>
		<location id="id1" x="-212" y="-34">
			<name x="-263" y="-76">Start Processing</name>
		</location>
		<location id="id2" x="-17" y="-34">
			<name x="-68" y="-76">Ready to release</name>
		</location>
		<location id="id3" x="136" y="-34">
			<name x="126" y="-68">END</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="assignment" x="-127" y="102">free!</label>
			<nail x="0" y="93"/>
			<nail x="-204" y="93"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="34" y="-59">full?</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-178" y="-59">timer = processing_time</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-331" y="-59">piece? &amp;&amp; free?</label>
			<label kind="assignment" x="-314" y="-34">timer:=0</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = Template();
// List one or more processes to be composed into a system.
system StationProcessing{
    station Station[NUM_STATIONS]{
    //declare the state variables for each station
    int free; //Indicates if the station is free or not(1 = piece being processed, 0 = no piece)
    double timer; //Timer
    //initialize the state variables
    init{
        free = 1;
        timer = 0;
    }

    //Declare the station behaviour
    transitions{
    //If the station is free and a new piece arrives, start processing the new piece
    free == 1 &amp;&amp; piece == 1 &amp;&amp; PROCESSING_TIME[id]&gt;0-&gt;
        free := 0;
        timer := PROCESSING_TIME[id];
        //timer va avanti
    //If the station is busy, continue processing the piece
    free == 0 &amp;&amp; timer &gt; 0 -&gt;
        //timer continua
    //If the processing of the piece is complete but the conveyor is full, it does nothing
    free == 0 &amp;&amp; timer ==0 &amp;&amp; full == 1-&gt;
        
    //If the processing of the piece is complete, release the piece and allow it to flow to the Conveyor Belt
    free == 0 &amp;&amp; timer == 0 &amp;&amp; full == 0-&gt;
        free := 1; 
    }
    //if
};
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
