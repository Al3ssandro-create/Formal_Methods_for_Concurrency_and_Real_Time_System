<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>/** Easiest configuration**/

///Constants
const int POS_POD[3]={4,3,2};
const int LENGTH_PRINCIPAL_RAIL=10;
const int LENGTH_DIRAMENT=5;
const int NUM_PODS = 3;
const int array_belt[LENGTH_PRINCIPAL_RAIL]={0,0,0,0,0,0,0,0,0,0};
const int array_dirament[LENGTH_DIRAMENT]={0,0,0,0,0};
const int diramation=0;

//Here we are defining the pods with the auto-instance of Uppaal
typedef int[0,NUM_PODS-1] pod_t;

//variabless
clock x;
int pos_Id_Station[NUM_PODS];
// 0: rail, 1: station: 2: sempahore
int pods_position[NUM_PODS];


//We define a new datastructure depending on how many diramament has the railstation


typedef struct{
  int main[LENGTH_PRINCIPAL_RAIL];
  int firs_diramantion[LENGTH_PRINCIPAL_RAIL];
} ConveyorBelt;



/**Channel**/
broadcast chan initializer;
broadcast chan move;
broadcast chan check;

ConveyorBelt belt;

/*** GLOBAL UTILITY FUNCTIONS ************************************************/


void initialize(){
    int i;
    for(i=0;i&lt;NUM_PODS;i++){
        pods_position[i]= POS_POD[i];
    }
    
   if(diramation==0)
        belt.main[i]=array_belt[i];    

}

void updateCurrentPositionGlobal(int id){
         pods_position[id]=pods_position[id] + 1;
    }

 //check if there is a pod with position equal to pos_id plus 1
bool checkQueueGlobal(int id){
    int i;
    for(i=0;i&lt;NUM_PODS;i++){
            if(pods_position[id]== pods_position[i])
                return true;   
     }
        return false;
}


bool checkWaitingGlobal(int id){
    if(array_belt[pods_position[id]]==1)
        return true;

        return false;
}

bool checkIfStationGlobal(int id){
    if(array_belt[pods_position[id]]==2)
        return true;

        return false;
}
</declaration>
	<template>
		<name>Pod</name>
		<parameter>const pod_t id</parameter>
		<declaration>  //the id of the pod

//true because we suppose you are ready and set to false if check go wrong
bool ready= true;
bool waiting= false;
bool station= false;


int current_pos=POS_POD[id];

void updateCurrentPosition(){
       current_pos= current_pos + 1;
updateCurrentPositionGlobal(id);
     
}

bool isReady(){
    return ready;
}

bool isStation(){
    return station;
}

bool isWaiting(){
    return waiting;
}



void checkStation(){
      if(checkIfStationGlobal(id))
        station=true;
    else
        station=false;
}


void checkWaiting(){
      if(checkWaitingGlobal(id))
        waiting=true;
    else
        waiting=false;
}

void initilaize(){
checkWaiting();
checkStation();

}</declaration>
		<location id="id0" x="-790" y="-178">
		</location>
		<location id="id1" x="-1011" y="-187">
		</location>
		<location id="id2" x="-629" y="-323">
		</location>
		<location id="id3" x="-569" y="-144">
			<name x="-527" y="-161">Ready to move</name>
		</location>
		<location id="id4" x="-841" y="-374">
		</location>
		<location id="id5" x="-892" y="-501">
			<name x="-902" y="-535">In Station</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id5"/>
			<target ref="id3"/>
			<label kind="guard" x="-646" y="-561">checkIfStation()</label>
			<label kind="synchronisation" x="-671" y="-535">exitStation?</label>
			<nail x="-263" y="-484"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="synchronisation" x="-850" y="-442">appr!</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<nail x="-527" y="-315"/>
			<nail x="-646" y="-400"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-535" y="-85">move?</label>
			<label kind="assignment" x="-697" y="-59">updateCurrentPosition()</label>
			<nail x="-604" y="-77"/>
			<nail x="-654" y="-85"/>
			<nail x="-731" y="-102"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-765" y="-280">isWaiting()</label>
			<label kind="synchronisation" x="-739" y="-255">check?</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-705" y="-187">isReady()</label>
			<label kind="synchronisation" x="-714" y="-153">check?</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="-901" y="-297">isStation()</label>
			<label kind="synchronisation" x="-909" y="-263">check?</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-935" y="-204">initializer?</label>
			<label kind="assignment" x="-960" y="-178">initilaize()</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Belt_Handler</name>
		<declaration>// Belt Clocks
int everythingMoved=false;




</declaration>
		<location id="id6" x="-518" y="-144">
		</location>
		<location id="id7" x="-722" y="-144">
		</location>
		<location id="id8" x="-365" y="-144">
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-415" y="-80">move!</label>
			<nail x="-433" y="17"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-467" y="-170">check!</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-704" y="-161">initializer!</label>
			<label kind="assignment" x="-704" y="-144">initialize()</label>
		</transition>
	</template>
	<system>/// Used for each pod where index indicate where it is in the rail station, and type indicate if it is in a station or in queque...


// Place template instantiations here.
sistema= Belt_Handler();

// List one or more processes to be composed into a system.
system sistema, Pod;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
